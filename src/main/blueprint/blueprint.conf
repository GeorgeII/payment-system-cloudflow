blueprint {
  streamlets {
    transfer-data = com.example.FilePaymentsIngress
    accounts = com.example.ParticipantInitializeIngress
    payments-checker = com.example.PaymentCheckingStreamlet
    validation = com.example.PaymentLoggingEgress
    processing = com.example.PaymentProcessingStreamlet
  }

  topics {
    transfer-data {
      producers = [transfer-data.out]
    }
    accounts {
      producers = [accounts.out]
    }
    payments-checker {
      producers = [payments.out, validation.invalid]
      consumers = [transfer-data.in, accounts.in]
    }
    validation {
      producers = [validation.out]
      consumers = [reporter.in]
    }
    processing {
      producers = [validation.invalid]
      consumers = [payments.in, accounts.in]
    }
  }
}